//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DXBlueStarGroup_V3
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BlueStarGroupEntities : DbContext
    {
        public BlueStarGroupEntities()
            : base("name=BlueStarGroupEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccountGroup> AccountGroups { get; set; }
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<DepreciationDetail> DepreciationDetails { get; set; }
        public virtual DbSet<GeneralLedger> GeneralLedgers { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<InvoiceDetail> InvoiceDetails { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<ItemsType> ItemsTypes { get; set; }
        public virtual DbSet<MasterInfo> MasterInfoes { get; set; }
        public virtual DbSet<TestID> TestIDs { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Voucher> Vouchers { get; set; }
        public virtual DbSet<VouchersDetail> VouchersDetails { get; set; }
        public virtual DbSet<VouchersType> VouchersTypes { get; set; }
        public virtual DbSet<WareHouseDetail> WareHouseDetails { get; set; }
        public virtual DbSet<CommanyCustomer> CommanyCustomers { get; set; }
        public virtual DbSet<GeneralLedgerCompany> GeneralLedgerCompanies { get; set; }
        public virtual DbSet<ItemsPriceCompany> ItemsPriceCompanies { get; set; }
        public virtual DbSet<UserRoleCompany> UserRoleCompanies { get; set; }
    
        public virtual ObjectResult<string> GenerateID(string sumaryName)
        {
            var sumaryNameParameter = sumaryName != null ?
                new ObjectParameter("SumaryName", sumaryName) :
                new ObjectParameter("SumaryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GenerateID", sumaryNameParameter);
        }
    
        public virtual ObjectResult<InsertUSer_Result> InsertUSer(string userName, string password, string status)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertUSer_Result>("InsertUSer", userNameParameter, passwordParameter, statusParameter);
        }
    }
}
