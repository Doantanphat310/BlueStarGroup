<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Exit_Button.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        D///+B////gf///8P////D////5////+f/8=
</value>
  </data>
</root>