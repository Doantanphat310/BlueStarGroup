using System;
using System.Collections.Generic;
using System.Windows.Forms;
using DevExpress.XtraGrid.Views.Grid;
using System.IO;
using BSServer.Controllers;
using BSCommon.Models;
using BSClient.Utility;
using System.ComponentModel;
using DevExpress.XtraEditors;
using DevExpress.XtraEditors.Controls;
using DevExpress.XtraEditors.Repository;

namespace BSClient
{
    public partial class VoucherControl : DevExpress.XtraEditors.XtraUserControl
    {
        public BindingList<Voucher> Voucher { get; set; }
        public BindingList<VoucherDetailDinhKhoan> VoucherDetailDinhKhoan { get; set; }
        public VoucherControl()
        {
            InitializeComponent();

            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext

            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            //dbContext = new DXBlueStarGroup_V3.BlueStarGroupEntities();
            //// Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            //dbContext.VouchersTypes.LoadAsync().ContinueWith(loadTask =>
            //{
            //    // Bind data to control when loading complete
            //    gridControlVoucher.DataSource = dbContext.VouchersTypes.Local.ToBindingList();
            //}, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());

            // int A = columnPrice.VisibleIndex; // A returns "5"

            //hide the "Price" column
            //  columnPrice.Visible = false;
            // int B = columnPrice.VisibleIndex; // B returns "-1"

            //show the "Price" column again
            // columnPrice.Visible = true;
            // int C = columnPrice.VisibleIndex; // C returns "5"
            //col
            VouchersTypeController voucherstype = new VouchersTypeController();
            List<VouchersType> vouchersT = voucherstype.GetVouchersTypeInfo("1");

            searchLookUpEditVoucherTypeXemChungTU.Properties.DataSource = vouchersT;
            searchLookUpEditVoucherTypeXemChungTU.Properties.NullText = "Chọn loại chứng từ";
            searchLookUpEditVoucherTypeXemChungTU.Properties.ValueMember = "VouchersTypeSName";
            searchLookUpEditVoucherTypeXemChungTU.Properties.DisplayMember = "VouchersTypeName";

            searchLookUpEditChungTuTypeDK.Properties.DataSource = vouchersT;
            searchLookUpEditChungTuTypeDK.Properties.NullText = "Chọn loại chứng từ";
            searchLookUpEditChungTuTypeDK.Properties.ValueMember = "VouchersTypeSName";
            searchLookUpEditChungTuTypeDK.Properties.DisplayMember = "VouchersTypeName";

            initdatasourceGridview();
            initControltoGridview();




        }

        private void tableLayoutPanel1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void VoucherControl_Load(object sender, EventArgs e)
        {
           // bool test = dateEditBDKT.SelectedRanges.IsDateSelected(DateTime.Now);
          // searchLookUpEditLoaiChungTu.it
            //gridViewVoucher.InitNewRow += new InitNewRowEventHandler(gridViewVoucher_InitNewRow);
        }

        public class DinhkhoanInfo
        {
            private string _ID;
            private string _Name;

            public DinhkhoanInfo(string ID, string Name)
            {
                _ID = ID;
                _Name = Name;
            }

            public override string ToString()
            {
                return _ID + ": " + _Name;
            }
        }

        private void gridViewVoucher_InitNewRow(object sender, DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs e)
        {
            // gridViewVoucher.SetRowCellValue(e.RowHandle, "RowID", Guid.NewGuid());
            //GridView view = sender as GridView;
            //view.SetRowCellValue(e.RowHandle, view.Columns["RowID"], Guid.NewGuid().ToString());

            DevExpress.XtraGrid.Views.Grid.GridView view = sender as GridView;
            //view.SetRowCellValue(e.RowHandle, "RowID", Guid.NewGuid().ToString());
            String RowID = Guid.NewGuid().ToString();
            File.WriteAllText(@"D:\TinPhatITSC\BlueStartGroup\TestGuidID.txt", "PhatTest: " + RowID);
            //  GridView view = sender as GridView;
            view.SetRowCellValue(e.RowHandle, view.Columns["RowID"], RowID);
            //gridViewVoucher.SetRowCellValue(e.RowHandle, "colRowID", RowID);
            //  view.SetRowCellValue(e.RowHandle, "RowID", RowID);
        }

        private void BTThem_Click(object sender, EventArgs e)
        {

        }

        private void btXoa_Click(object sender, EventArgs e)
        {
            //gridViewVoucher.DeleteRow(gridViewVoucher.FocusedRowHandle);
        }

        private void ACE_Them_Click(object sender, EventArgs e)
        {
            //gridViewVoucher.AddNewRow();
        }

        private void ACE_delete_Click(object sender, EventArgs e)
        {
          //  gridViewVoucher.DeleteSelectedRows();
            // gridViewVoucher.DeleteRow(gridViewVoucher.FocusedRowHandle);

        }

        private void gridViewVoucher_RowUpdated(object sender, DevExpress.XtraGrid.Views.Base.RowObjectEventArgs e)
        {

            //try
            //{
            //    //Your code...
            //    // Could also be before try if you know the exception occurs in SaveChanges

            //    dbContext.SaveChanges();
            //    }
            //    catch (DbEntityValidationException d)
            //    {
            //        foreach (var eve in d.EntityValidationErrors)
            //        {
            //            Console.WriteLine("Entity of type \"{0}\" in state \"{1}\" has the following validation errors:",
            //                eve.Entry.Entity.GetType().Name, eve.Entry.State);
            //            foreach (var ve in eve.ValidationErrors)
            //            {
            //                Console.WriteLine("- Property: \"{0}\", Error: \"{1}\"",
            //                    ve.PropertyName, ve.ErrorMessage);
            //            }
            //        }
            //        throw;
            //    }

        }

        private void accordionControlElement1_Click(object sender, EventArgs e)
        {

        }

        private void ACE_CapNhat_Click(object sender, EventArgs e)
        {
            //try
            //{
            //    dbContext.SaveChanges();
            //    MessageBox.Show("Lưu dữ liệu thành công!");
            //}
            //catch (Exception ex)
            //{
            //    MessageBox.Show(ex.Message.ToString(), "Lỗi lưu dữ liệu", MessageBoxButtons.OK, MessageBoxIcon.Error);

            //}
            //  context.SubmitChanges();


        }

        private void ACE_CapNhat_MouseHover(object sender, EventArgs e)
        {
            //ACE_CapNhat.BackColor = Color.Aqua;
        }

        private void ACE_CapNhat_MouseClick(object sender, MouseEventArgs e)
        {
            //ACE_CapNhat.BackColor = Color.White;
        }

        private void ACE_CapNhat_Leave(object sender, EventArgs e)
        {
            //ACE_CapNhat.ResetBackColor();
        }

        private void gridViewVoucher_RowCountChanged(object sender, EventArgs e)
        {

        }

        private void panelControl1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void labelControl13_Click(object sender, EventArgs e)
        {

        }

        private void simpleButton9_Click(object sender, EventArgs e)
        {

        }

        private void labelControl18_Click(object sender, EventArgs e)
        {

        }

        private void labelControl22_Click(object sender, EventArgs e)
        {

        }

        private void dateEditBDKT_CustomDisplayText(object sender, DevExpress.XtraEditors.Controls.CustomDisplayTextEventArgs e)
        {
            
        }

        private void InitGridView()
        {
            gridViewDSChungTu.Columns.Clear();
            ClientCommon.AddColumn(this.gridViewDSChungTu, "Date", "Ngày nhập", 100, false);
            ClientCommon.AddColumn(this.gridViewDSChungTu, "VouchersID", "Mã CT", 150);
            ClientCommon.AddColumn(this.gridViewDSChungTu, "Amount", "Tiền", 100);
            ClientCommon.AddColumn(this.gridViewDSChungTu, "VourchersTypeSumary", "Loại CT", 80);
            ClientCommon.AddColumn(this.gridViewDSChungTu, "CreateUser", "Người nhập", 80);
        }

        private void SetupGridView()
        {
            ClientCommon.SetupGridView(this.gridViewDSChungTu);
            this.gridViewDSChungTu.OptionsSelection.MultiSelectMode = DevExpress.XtraGrid.Views.Grid.GridMultiSelectMode.CheckBoxRowSelect;
            this.gridViewDSChungTu.OptionsView.ShowAutoFilterRow = true;
            this.gridViewDSChungTu.OptionsView.NewItemRowPosition = DevExpress.XtraGrid.Views.Grid.NewItemRowPosition.None;
            this.gridViewDSChungTu.OptionsBehavior.AllowAddRows = DevExpress.Utils.DefaultBoolean.False;
        }

        private void LoadGridView(string CompanyID, DateTime NgayBD, DateTime NgayKT, string LoaiChungTu)
        {
            VoucherController controller = new VoucherController();
            Voucher = new BindingList<Voucher>(controller.GetVouchersConditionCompany(CompanyID, NgayBD, NgayKT, LoaiChungTu));
            gridControlDSChungTu.DataSource = Voucher;
            //gridControlNhapDinhKhoan
        }

        private void simpleButtonLoadVoucher_Click(object sender, EventArgs e)
        {
            // view.GetRowCellValue(selectedRows(0), searchLookUpEdit.Properties.ValueMember)

            //Dim view = searchLookUpEdit.Properties.View
            //selectedRows = view.GetSelectedRows()
            //If selectedRows.Count() > 0 Then
            //    searchLookUpEdit.EditValue = view.GetRowCellValue(selectedRows(0), searchLookUpEdit.Properties.ValueMember)
            //Else
            //    searchLookUpEdit.EditValue = Nothing
            //End If
            
         //   GridView view = searchLookUpEditVoucherTypeXemChungTU.Properties.View;
          //   selectedRows = view.GetSelectedRows();

          //  string valuemember = view.GetRowCellValue(selectedRows(0),searchLookUpEditVoucherTypeXemChungTU.Properties.ValueMember);

           // LoadGridView("CompanyID", dateEditBDKT.DateTime, dateEditNgayKT.DateTime, searchLookUpEditVoucherTypeXemChungTU.Properties.ValueMember);
        }

      


        
    

        private void gridViewDinhKhoan_ShowingEditor(object sender, CancelEventArgs e)
        {
           
        }

        RepositoryItemSearchLookUpEdit riLookup = new RepositoryItemSearchLookUpEdit();
        RepositoryItemSearchLookUpEdit rsItemlookup = new RepositoryItemSearchLookUpEdit();
        RepositoryItemSearchLookUpEdit rDTLookup = new RepositoryItemSearchLookUpEdit();
        RepositoryItemSearchLookUpEdit rGLLookup = new RepositoryItemSearchLookUpEdit();

        void initControltoGridview()
        {


            MaterialNVController MaterialNV = new MaterialNVController();
            List<MaterialNV> materialNV = MaterialNV.GetMaterialNV();
            riLookup.DataSource = materialNV;
            riLookup.NullText = "Chọn nghiệp vụ";
            riLookup.ValueMember = "NVSummary";
            riLookup.DisplayMember = "NVName";
            gridControlNhapDinhKhoan.RepositoryItems.Add(riLookup);
            gridViewDinhKhoan.Columns["NV"].ColumnEdit = riLookup;

           

            ////////////////////////////////////
            /// //TaiKhoan
            MaterialNVController MaterialTK = new MaterialNVController();
            List<MaterialTK> materialTK = MaterialTK.GetMaterialTK();
            rsItemlookup.DataSource = materialTK;
            rsItemlookup.NullText = "Chọn số tài khoản";
            rsItemlookup.ValueMember = "AccountID";
            rsItemlookup.DisplayMember = "TKNumber";
            gridControlNhapDinhKhoan.RepositoryItems.Add(rsItemlookup);
            gridViewDinhKhoan.Columns["TKNumber"].ColumnEdit = rsItemlookup;
            gridViewDinhKhoan.BestFitColumns();

            ///Doi Tuong
            ///
            MaterialNVController MaterialDT = new MaterialNVController();
            List<MaterialDT> materialDT = MaterialDT.GetMaterialDT("CompanyID");
            rDTLookup.DataSource = materialDT;
            rDTLookup.NullText = "Chọn đối tượng";
            rDTLookup.ValueMember = "CustomerID";
            rDTLookup.DisplayMember = "CustomerSName";
            gridControlNhapDinhKhoan.RepositoryItems.Add(rDTLookup);
            gridViewDinhKhoan.Columns["CustomerName"].ColumnEdit = rDTLookup;
            gridViewDinhKhoan.BestFitColumns();

            ///So cai
            ///
            MaterialNVController MaterialGL = new MaterialNVController();
            List<MaterialGL> materialGL = MaterialGL.GetMaterialGL("CompanyID");
            rGLLookup.DataSource = materialGL;
            rGLLookup.NullText = "Chọn sổ cái";
            rGLLookup.ValueMember = "GeneralLedgerID";
            rGLLookup.DisplayMember = "GeneralLedgerName";
            gridControlNhapDinhKhoan.RepositoryItems.Add(rGLLookup);
            gridViewDinhKhoan.Columns["GeneralLedgerName"].ColumnEdit = rGLLookup;
            gridViewDinhKhoan.BestFitColumns();
           


        }

        void initdatasourceGridview()
        {
            VoucherDetailDinhKhoanController controller = new VoucherDetailDinhKhoanController();
            VoucherDetailDinhKhoan = new BindingList<VoucherDetailDinhKhoan>(controller.GetVoucherDetailDinhKhoan("a"));
            gridControlNhapDinhKhoan.DataSource = VoucherDetailDinhKhoan;
        }
    }
}
